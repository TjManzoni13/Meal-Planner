üßæ Meal Planner App ‚Äî Functional Requirements (MVP Version)

‚∏ª

üé® General UI/UX Design Goals
	‚Ä¢	Style: Bright, colorful, minimalistic.
	‚Ä¢	Navigation: Tab-based or bottom-bar for switching between the three core pages.
	‚Ä¢	Persistence: All user-entered data is stored locally using UserDefaults or CoreData.

‚∏ª

1Ô∏è‚É£ Page One ‚Äì Weekly Meal Planner

Components:
	‚Ä¢	Header (Week Navigator)
	‚Ä¢	Show current week (Mon‚ÄìSun).
	‚Ä¢	Arrows or swipe to go forward/back in weeks.
	‚Ä¢	Historical weeks are saved and viewable.
	‚Ä¢	Week View Grid
	‚Ä¢	Days: Mon to Sun.
	‚Ä¢	Sections per day:
	‚Ä¢	Breakfast
	‚Ä¢	Lunch
	‚Ä¢	Dinner
	‚Ä¢	Other
	‚Ä¢	Each section contains:
	‚Ä¢	Dropdown (combo box) with:
	‚Ä¢	List of meals (from user-created meal list, filtered by tag: breakfast/lunch/dinner/multiple/all).
	‚Ä¢	Searchable with autocomplete.
	‚Ä¢	Option to manually add ingredient-based meal if not selecting a meal.
	‚Ä¢	Tick box: ‚ÄúIngredients already have‚Äù (on each meal).

Functionality:
	‚Ä¢	Selecting a meal auto-fills from existing meals (based on tag).
	‚Ä¢	Manually entered ingredients also allowed.
	‚Ä¢	Persist meal selections by week/day/section in local storage.

‚∏ª

2Ô∏è‚É£ Page Two ‚Äì Shopping List

Components:
	‚Ä¢	Everyday Items Section
	‚Ä¢	Always shown at the top.
	‚Ä¢	Defined by the user in Page 3.
	‚Ä¢	Auto-generated Shopping List
	‚Ä¢	Pulled from all meals and manual entries from current week‚Äôs meal plan.
	‚Ä¢	Structure:
	‚Ä¢	Everyday Items (fixed).
	‚Ä¢	Ingredients from meals.
	‚Ä¢	Manually added items (input at bottom).
	‚Ä¢	Duplicate Highlighting
	‚Ä¢	Ingredients with the same name are highlighted in matching colors.
	‚Ä¢	Example: two ‚Äúcarrots‚Äù entries = same red background.
	‚Ä¢	Display item twice but inform user of duplication.
	‚Ä¢	Tick Items
	‚Ä¢	Ingredients/meals can be checked.
	‚Ä¢	Checked items move to bottom of list under a ‚ÄúTicked Off‚Äù section.
	‚Ä¢	Manual Add
	‚Ä¢	Text field + ‚ÄúAdd‚Äù button at the bottom to enter custom shopping items.

‚∏ª

3Ô∏è‚É£ Page Three ‚Äì Meal & Usuals Management

Sections:
	1.	Usual Items
	‚Ä¢	List of items that will always appear in the shopping list.
	‚Ä¢	Ability to add/edit/delete usual items.
	2.	Meal Creator
	‚Ä¢	Fields:
	‚Ä¢	Meal Name
	‚Ä¢	Tags: Breakfast / Lunch / Dinner / Multiple / All
	‚Ä¢	Ingredients List (multi-entry field)
	‚Ä¢	Optional Recipe Instructions (multiline text)
	‚Ä¢	Save button: Persists meal in local storage.

Functionality:
	‚Ä¢	Meals created here are selectable in Page 1 dropdowns.
	‚Ä¢	Tags control which dropdowns they appear in.
	‚Ä¢	Editing and deleting meals supported.
	‚Ä¢	All data stored locally on device.

‚∏ª

üìÅ Code Architecture Suggestions
	‚Ä¢	Use MVVM pattern to keep code clean.
	‚Ä¢	Create helpers and managers in separate files:
	‚Ä¢	StorageManager.swift ‚Äì handles read/write to local storage.
	‚Ä¢	MealModel.swift, WeekModel.swift, IngredientModel.swift ‚Äì models.
	‚Ä¢	ColorHighlighter.swift ‚Äì logic to assign colors for duplicates.
	‚Ä¢	MealHelper.swift ‚Äì filters meals by tag, search logic.
	‚Ä¢	Use Codable structs for storing models in UserDefaults or switch to CoreData for better data relations later.

‚∏ª

üß™ Future Enhancements (Not for MVP)

(Optional for later sprints)

	‚Ä¢	iCloud sync.
	‚Ä¢	Image support for meals.
	‚Ä¢	Export shopping list (PDF/Share).
	‚Ä¢	AI-based meal suggestions.